@model Online_Quiz_App.Models.Tbl_Questions

@{
    ViewBag.Title = "Addquestions";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2>Addquestions</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h1 style="color:green">@TempData["msg"]</h1>
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Q_FK_catid, "Q_FK_catid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Q_FK_catid", ViewBag.list as SelectList, "__select__", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Q_FK_catid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Q_Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Q_Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Q_Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Op_A, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Op_A, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Op_A, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Op_B, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Op_B, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Op_B, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Op_C, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Op_C, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Op_C, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Op_D, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Op_D, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Op_D, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correct_Op, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Correct_Op, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correct_Op, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

